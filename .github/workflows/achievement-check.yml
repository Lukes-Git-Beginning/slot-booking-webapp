name: Achievement System Check

on:
  schedule:
    # T√§glich um 22:00 Uhr Berlin Zeit (21:00 UTC im Sommer, 20:00 UTC im Winter)
    # Zus√§tzlicher Lauf zur Sicherheit am n√§chsten Morgen
    - cron: '0 20 * * *'    # 20:00 UTC = 22:00 Berlin (Hauptlauf)
    - cron: '30 6 * * *'    # 06:30 UTC = 08:30 Berlin (Backup-Lauf)
  workflow_dispatch:  # Manuell ausl√∂sbar

jobs:
  check-achievements:
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDS_BASE64: ${{ secrets.GOOGLE_CREDS_BASE64 }}

    steps:
      - name: üì• Checkout Repository
        uses: actions/checkout@v4

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üìÇ Ensure Static Directory Exists
        run: |
          mkdir -p static
          # Erstelle leere JSON Dateien falls sie nicht existieren
          if [ ! -f static/user_badges.json ]; then
            echo "{}" > static/user_badges.json
          fi
          if [ ! -f static/daily_user_stats.json ]; then
            echo "{}" > static/daily_user_stats.json
          fi
          echo "‚úÖ Static directory prepared"

      - name: üèÜ Run Achievement Check
        run: |
          echo "üïê Starting achievement check at $(date)"
          python run_achievements.py
          echo "‚úÖ Achievement check completed"

      - name: üíæ Commit Achievement Data
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # F√ºge Achievement-Dateien hinzu
          git add static/user_badges.json static/daily_user_stats.json 2>/dev/null || true
          
          # Commit nur wenn es √Ñnderungen gibt
          if git diff --staged --quiet; then
            echo "No achievement changes to commit"
          else
            git commit -m "üèÜ Auto: Achievement system update [skip ci]
            
            - MVP badges checked and awarded
            - Daily stats updated
            - Timestamp: $(date '+%Y-%m-%d %H:%M:%S')"
            
            git push
          fi

      - name: üìä Achievement Summary
        run: |
          python -c "
          import json
          import os
          
          try:
              with open('static/user_badges.json', 'r') as f:
                  badges = json.load(f)
              
              total_users = len(badges)
              total_badges = sum(data.get('total_badges', 0) for data in badges.values())
              
              print(f'üìä Achievement Summary:')
              print(f'   - Users with badges: {total_users}')
              print(f'   - Total badges awarded: {total_badges}')
              
              if total_users > 0:
                  avg_badges = total_badges / total_users
                  print(f'   - Average badges per user: {avg_badges:.1f}')
              
          except Exception as e:
              print(f'‚ÑπÔ∏è No achievement data available: {e}')
          " || true
