# Business Tool Hub - Nginx Reverse Proxy Configuration
# ========================================
# Provider-agnostisch: Funktioniert auf Hetzner, Strato, Netcup, etc.
# ========================================
#
# INSTALLATION:
# 1. Domain anpassen (Zeile 18, 34, 37-39)
# 2. Pfade prüfen (Zeile 72-76)
# 3. sudo cp deployment/nginx.conf /etc/nginx/sites-available/business-hub
# 4. sudo ln -s /etc/nginx/sites-available/business-hub /etc/nginx/sites-enabled/
# 5. sudo nginx -t
# 6. sudo systemctl reload nginx
#
# DOMAIN-SETUP:
#   Ersetze "ihre-domain.de" mit deiner echten Domain
#
# IP-BASIERTES SETUP (ohne Domain):
#   Ersetze "server_name ihre-domain.de www.ihre-domain.de;"
#   mit "server_name _;" (akzeptiert alle Anfragen)
#   SSL-Block (server 443) auskommentieren bis Domain vorhanden
#
# ========================================

# HTTP Server - Redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name ihre-domain.de www.ihre-domain.de;  # <-- HIER DOMAIN ANPASSEN!

    # Let's Encrypt Challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS Server
# HINWEIS: Erst NACH Certbot-Ausführung aktivieren!
# Falls noch keine Domain: Diesen Block auskommentieren
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ihre-domain.de www.ihre-domain.de;  # <-- HIER DOMAIN ANPASSEN!

    # SSL Certificates (von Let's Encrypt Certbot generiert)
    # Nach Certbot werden diese Pfade automatisch korrekt sein
    ssl_certificate /etc/letsencrypt/live/ihre-domain.de/fullchain.pem;  # <-- DOMAIN ANPASSEN!
    ssl_certificate_key /etc/letsencrypt/live/ihre-domain.de/privkey.pem;  # <-- DOMAIN ANPASSEN!
    ssl_trusted_certificate /etc/letsencrypt/live/ihre-domain.de/chain.pem;  # <-- DOMAIN ANPASSEN!

    # SSL Configuration (Modern Security)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:;" always;

    # Logging
    access_log /var/log/nginx/business-hub-access.log;
    error_log /var/log/nginx/business-hub-error.log;

    # Max Upload Size
    client_max_body_size 16M;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json application/javascript;

    # Root directory for static files
    # Pfade: /opt/business-hub (VPS Standard) oder /home/business-hub/business-hub (Legacy)
    root /opt/business-hub;

    # Static files (CSS, JS, Images)
    location /static/ {
        alias /opt/business-hub/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # Favicon
    location /favicon.ico {
        alias /opt/business-hub/static/favicon.ico;
        access_log off;
        log_not_found off;
    }

    # Health Check Endpoint (no logging for monitoring)
    location /health {
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        access_log off;
    }

    # Main Application (Proxy to Gunicorn)
    location / {
        # Proxy Headers
        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;

        # Timeouts
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;

        # Buffering
        proxy_buffering on;
        proxy_buffers 16 16k;
        proxy_buffer_size 32k;

        # WebSocket Support (für zukünftige Features)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # No cache for dynamic content
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    # Rate Limiting für API-Endpoints
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        limit_req_status 429;

        proxy_pass http://127.0.0.1:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Deny access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /(\.git|\.env|\.venv|venv|__pycache__|\.pyc$) {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Rate Limiting Zone (außerhalb server-Block)
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=60r/m;